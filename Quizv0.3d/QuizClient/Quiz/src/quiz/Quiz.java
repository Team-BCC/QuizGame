/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quiz;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import static java.lang.Thread.sleep;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
//import static javafx.scene.paint.Color.color;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameTitlePane;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author Yacine
 */
public class Quiz extends javax.swing.JFrame {

    /**
     * Creates new form Quiz
     */
    
    
    protected Socket client;                 // Dichiarazione oggetto socket 
    protected String DatiRic;                // Dati Ricevuti
    protected String DatiInvia;              // Dati da inviare
    protected int port;						// Porta
    protected ObjectOutputStream outVersoServer;
    protected ObjectInputStream inDalServer;
    protected Message answer;
    protected Message question;
    protected Message response;
    protected String ip;
    protected int pmax=100;
    
    private int mouseX, mouseY;
    private int xMouse, yMouse;
    
    public Quiz() {
        
        initComponents();
        
        setIconImage();
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        //this.setLocation(dim.width/2-this.getSize().width/2,dim.height/2-this.getSize().height/2);
        
        this.setBackground(new Color(0, 0, 0 ,0));
        
        this.port=6706;
        this.ip="localhost"; /*"localhost";   "10.13.28.219"; */ 
        IP.setText(this.ip+":"+this.port);
        
        jPanel1.setBackground(new Color(0, 0, 0 ,0));
        
        jPanel2.setVisible(false);
        jPanel2.setBackground(new Color(0, 0, 0 ,0));
        
        Chiudi.setOpaque(false);
        Chiudi.setContentAreaFilled(false);
        Chiudi.setBorderPainted(false);
        
        InputNickname.setOpaque(false);
        InputNickname.setBackground(new Color(0, 0, 0 ,0));
        
        Gioca.setOpaque(false);
        Gioca.setContentAreaFilled(false);
        Gioca.setBorderPainted(false);
        
        InputRisposta.setOpaque(false);
        InputRisposta.setBackground(new Color(0, 0, 0 ,0));
        
        Invia.setOpaque(false);
        Invia.setContentAreaFilled(false);
        Invia.setBorderPainted(false);
        
        
        Riprova.setOpaque(false);
        Riprova.setContentAreaFilled(false);
        Riprova.setBorderPainted(false);
        
        Riprova.setVisible(false);
        SfondoRiprova.setVisible(false);
        Perso.setVisible(false);
        PunteggioMAX.setVisible(false);
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        QuestionGame = new javax.swing.JLabel();
        Chiudi = new javax.swing.JButton();
        Nickname = new javax.swing.JLabel();
        InputNickname = new javax.swing.JTextField();
        Separatore = new javax.swing.JSeparator();
        Gioca = new javax.swing.JButton();
        SfondoGioca = new javax.swing.JLabel();
        Logo = new javax.swing.JLabel();
        Drag = new javax.swing.JLabel();
        IP = new javax.swing.JLabel();
        Start = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        PunteggioMAX = new javax.swing.JLabel();
        Perso = new javax.swing.JLabel();
        Chiudi1 = new javax.swing.JButton();
        Domanda = new javax.swing.JLabel();
        Separatore1 = new javax.swing.JSeparator();
        InputRisposta = new javax.swing.JTextField();
        Invia = new javax.swing.JButton();
        SfondoInvia = new javax.swing.JLabel();
        TestoTentativi = new javax.swing.JLabel();
        TestoPunteggio = new javax.swing.JLabel();
        Riprova = new javax.swing.JButton();
        SfondoRiprova = new javax.swing.JLabel();
        Drag1 = new javax.swing.JLabel();
        Start1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Question Game");
        setUndecorated(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        QuestionGame.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        QuestionGame.setForeground(new java.awt.Color(255, 255, 255));
        QuestionGame.setText("Question Game");
        jPanel1.add(QuestionGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 300, 60));

        Chiudi.setBackground(new java.awt.Color(0, 0, 0));
        Chiudi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Chiudi.setForeground(new java.awt.Color(255, 255, 255));
        Chiudi.setText("X");
        Chiudi.setBorder(null);
        Chiudi.setBorderPainted(false);
        Chiudi.setContentAreaFilled(false);
        Chiudi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ChiudiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ChiudiMouseExited(evt);
            }
        });
        Chiudi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChiudiActionPerformed(evt);
            }
        });
        jPanel1.add(Chiudi, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 20, 20, 20));

        Nickname.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        Nickname.setForeground(new java.awt.Color(255, 255, 255));
        Nickname.setText("Nickname");
        jPanel1.add(Nickname, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 170, -1, -1));

        InputNickname.setBackground(new java.awt.Color(0, 0, 0));
        InputNickname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        InputNickname.setForeground(new java.awt.Color(153, 153, 153));
        InputNickname.setText("Inserisci il tuo Nickname");
        InputNickname.setBorder(null);
        InputNickname.setOpaque(false);
        InputNickname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                InputNicknameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                InputNicknameFocusLost(evt);
            }
        });
        InputNickname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputNicknameActionPerformed(evt);
            }
        });
        jPanel1.add(InputNickname, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 270, 390, 50));
        jPanel1.add(Separatore, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 310, 400, 10));

        Gioca.setBackground(new java.awt.Color(0, 0, 0));
        Gioca.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Gioca.setForeground(new java.awt.Color(255, 255, 255));
        Gioca.setText("Gioca");
        Gioca.setOpaque(false);
        Gioca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GiocaActionPerformed(evt);
            }
        });
        Gioca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                GiocaKeyPressed(evt);
            }
        });
        jPanel1.add(Gioca, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 400, 300, 90));

        SfondoGioca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Bottone.png"))); // NOI18N
        jPanel1.add(SfondoGioca, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 400, 300, 90));

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Icon.png"))); // NOI18N
        jPanel1.add(Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 220, 370, 350));

        Drag.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DragMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                DragMouseMoved(evt);
            }
        });
        Drag.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DragMousePressed(evt);
            }
        });
        jPanel1.add(Drag, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 1080, 50));

        IP.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        IP.setForeground(new java.awt.Color(255, 255, 255));
        IP.setText("XXX.XXX.XXX.XXX:XXX");
        jPanel1.add(IP, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 680, 180, 40));

        Start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Quiz.png"))); // NOI18N
        Start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                StartMousePressed(evt);
            }
        });
        jPanel1.add(Start, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 0, 1130, 730));

        jPanel2.setMinimumSize(new java.awt.Dimension(1220, 730));
        jPanel2.setPreferredSize(new java.awt.Dimension(1220, 730));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PunteggioMAX.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        PunteggioMAX.setForeground(new java.awt.Color(255, 255, 255));
        PunteggioMAX.setText("Punteggio massimo: ");
        jPanel2.add(PunteggioMAX, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 150, 580, 100));

        Perso.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        Perso.setForeground(new java.awt.Color(255, 255, 255));
        Perso.setText("HAI PERSO!");
        jPanel2.add(Perso, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, 790, 160));

        Chiudi1.setBackground(new java.awt.Color(0, 0, 0));
        Chiudi1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Chiudi1.setForeground(new java.awt.Color(255, 255, 255));
        Chiudi1.setText("X");
        Chiudi1.setBorder(null);
        Chiudi1.setBorderPainted(false);
        Chiudi1.setContentAreaFilled(false);
        Chiudi1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Chiudi1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Chiudi1MouseExited(evt);
            }
        });
        Chiudi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Chiudi1ActionPerformed(evt);
            }
        });
        jPanel2.add(Chiudi1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1132, 22, 20, 20));

        Domanda.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        Domanda.setForeground(new java.awt.Color(255, 255, 255));
        Domanda.setText("DOMANDA");
        jPanel2.add(Domanda, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 790, 210));
        jPanel2.add(Separatore1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 360, 970, 10));

        InputRisposta.setBackground(new java.awt.Color(0, 0, 0));
        InputRisposta.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        InputRisposta.setForeground(new java.awt.Color(153, 153, 153));
        InputRisposta.setText("Inserisci la risposta");
        InputRisposta.setBorder(null);
        InputRisposta.setOpaque(false);
        InputRisposta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                InputRispostaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                InputRispostaFocusLost(evt);
            }
        });
        InputRisposta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputRispostaActionPerformed(evt);
            }
        });
        jPanel2.add(InputRisposta, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 950, 70));

        Invia.setBackground(new java.awt.Color(0, 0, 0));
        Invia.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Invia.setForeground(new java.awt.Color(255, 255, 255));
        Invia.setText("Invia");
        Invia.setOpaque(false);
        Invia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InviaActionPerformed(evt);
            }
        });
        jPanel2.add(Invia, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 410, 300, 90));

        SfondoInvia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Bottone.png"))); // NOI18N
        jPanel2.add(SfondoInvia, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 410, 300, 90));

        TestoTentativi.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        TestoTentativi.setForeground(new java.awt.Color(255, 255, 255));
        TestoTentativi.setText("Numero tentativi: ");
        jPanel2.add(TestoTentativi, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 600, -1, -1));

        TestoPunteggio.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        TestoPunteggio.setForeground(new java.awt.Color(255, 255, 255));
        TestoPunteggio.setText("Punteggio: ");
        jPanel2.add(TestoPunteggio, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 600, -1, -1));

        Riprova.setBackground(new java.awt.Color(0, 0, 0));
        Riprova.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Riprova.setForeground(new java.awt.Color(255, 255, 255));
        Riprova.setText("Riprova");
        Riprova.setOpaque(false);
        Riprova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RiprovaActionPerformed(evt);
            }
        });
        jPanel2.add(Riprova, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 300, 300, 90));

        SfondoRiprova.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Bottone.png"))); // NOI18N
        jPanel2.add(SfondoRiprova, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 300, 300, 90));

        Drag1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                Drag1MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                Drag1MouseMoved(evt);
            }
        });
        Drag1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Drag1MouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Drag1MousePressed(evt);
            }
        });
        jPanel2.add(Drag1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 1080, 50));

        Start1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Scuro.png"))); // NOI18N
        jPanel2.add(Start1, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 2, 1130, 730));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ChiudiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChiudiActionPerformed
        // TODO add your handling code here:        
        System.exit(0);
    }//GEN-LAST:event_ChiudiActionPerformed

    private void ChiudiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChiudiMouseEntered
        // TODO add your handling code here:                
        Chiudi.setForeground(new Color(255, 0 ,0));
    }//GEN-LAST:event_ChiudiMouseEntered

    private void ChiudiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChiudiMouseExited
        // TODO add your handling code here:           
        Chiudi.setForeground(new Color(255, 255 ,255));
    }//GEN-LAST:event_ChiudiMouseExited

    private void InputNicknameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputNicknameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputNicknameActionPerformed

    private void InputNicknameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InputNicknameFocusGained
        // TODO add your handling code here:
        if("Inserisci il tuo Nickname".equals(InputNickname.getText()))
            InputNickname.setText("");
        else
            InputNickname.setText(InputNickname.getText());
        
        InputNickname.setForeground(new Color(255, 255 ,255));
    }//GEN-LAST:event_InputNicknameFocusGained

    private void InputNicknameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InputNicknameFocusLost
        // TODO add your handling code here:
        
        if("".equals(InputNickname.getText()))
            InputNickname.setText("Inserisci il tuo Nickname");
        
        InputNickname.setForeground(new Color(153, 153, 153));
    }//GEN-LAST:event_InputNicknameFocusLost

    private void GiocaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GiocaActionPerformed
        // TODO add your handling code here:
        
        if(("".equals(InputNickname.getText()))||("Inserisci il tuo Nickname".equals(InputNickname.getText())))
        {
           JOptionPane.showMessageDialog(this, "Inserire il Nickname", "Attenzione", JOptionPane.ERROR_MESSAGE); 
           return;
        }
        else
        {
            this.outVersoServer = null;
	    this.client=null;
	    this.DatiRic="";
	    this.DatiInvia="";
	    this.inDalServer=null;
            
            //creo il Socket con il server
            try
            {
                //si crea un socket di comunicazione con il server <ip> e <port>
                client = new Socket(ip, port);  

                inDalServer = new ObjectInputStream(client.getInputStream());
                outVersoServer = new ObjectOutputStream(client.getOutputStream());
		                   
                DatiInvia = InputNickname.getText();              //reads string

                Message handshake = new Message(DatiInvia);

                outVersoServer.writeObject(handshake); // Invio oggetto presa in input
                
                //ATTESA PRIMA DOMANDA
                
                question = (Message) inDalServer.readObject();  //attendo dati dal server
                
                TestoPunteggio.setText("Punteggio: "+question.getPoints());
                TestoTentativi.setText("Numero tentativi: "+question.getAttempts());
                
                
                Domanda.setText("<html><p style=white-space: pre;>"+question.getMessage1()+" ("+question.getValue()+" punti)</p></html>");
                //Domanda.setText(question.getMessage1());
                
                jPanel1.setVisible(false);
                jPanel2.setVisible(true);
                Invia.setEnabled(true);
                InputRisposta.setEnabled(true);
            }
            catch (IOException e)
            {
                JOptionPane.showMessageDialog(this, "Errore durante la connessione!", "Attenzione", JOptionPane.ERROR_MESSAGE); 
                return;
            }
            catch (ClassNotFoundException ex)
            {
                Logger.getLogger(Quiz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_GiocaActionPerformed

    private void Chiudi1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Chiudi1MouseEntered
        // TODO add your handling code here:
        Chiudi1.setForeground(new Color(255, 0 ,0));
    }//GEN-LAST:event_Chiudi1MouseEntered

    private void Chiudi1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Chiudi1MouseExited
        // TODO add your handling code here:
        Chiudi1.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_Chiudi1MouseExited

    private void Chiudi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Chiudi1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_Chiudi1ActionPerformed

    private void InputRispostaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InputRispostaFocusGained
        // TODO add your handling code here:
        if("Inserisci la risposta".equals(InputRisposta.getText()))
            InputRisposta.setText("");
        else
            InputRisposta.setText(InputRisposta.getText());
        
        InputRisposta.setForeground(new Color(255, 255 ,255));
    }//GEN-LAST:event_InputRispostaFocusGained

    private void InputRispostaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InputRispostaFocusLost
        // TODO add your handling code here:
        if("".equals(InputRisposta.getText()))
            InputRisposta.setText("Inserisci la risposta");
        
        InputRisposta.setForeground(new Color(153, 153, 153));
    }//GEN-LAST:event_InputRispostaFocusLost

    private void InputRispostaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputRispostaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputRispostaActionPerformed

    private void InviaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InviaActionPerformed
        // TODO add your handling code here:
        //INVIO RISPOSTA
        
        if(("".equals(InputRisposta.getText()))||("Inserisci la risposta".equals(InputRisposta.getText())))
        {
           JOptionPane.showMessageDialog(this, "Inserisci la risposta", "Attenzione", JOptionPane.ERROR_MESSAGE); 
           return;
        }
        else
        {
            
            do {
                try {
                    DatiInvia = InputRisposta.getText();
                    answer = new Message(DatiInvia);
                    outVersoServer.writeObject(answer); // Invio oggetto presa in input

                    response = (Message) inDalServer.readObject();  //attendo dati dal server
                    System.out.println(response.toString());
                    System.out.println("\nRisultato:"+response.getMessage1()+"Punteggio attuale: "+response.getPoints());

                    question = (Message) inDalServer.readObject();  //attendo dati dal server

                    TestoPunteggio.setText("Punteggio: "+response.getPoints());
                    TestoTentativi.setText("Numero tentativi: "+question.getAttempts());
                    InputRisposta.setText("Inserisci la risposta");
                    Domanda.setText("<html><p style=white-space: pre;>"+question.getMessage1()+" ("+question.getValue()+" punti)</p></html>");
                //Domanda.setText(question.getMessage1());
                    
                    if((response.getPoints()) > pmax)
                    {      pmax=response.getPoints();   }
                    
                    PunteggioMAX.setText("Punteggio massimo:  "+pmax);
                
                    return;
                } catch (IOException e)
                {
                    e.printStackTrace();
                } catch (ClassNotFoundException ex)
                {
                    System.err.println("YOUR PROBLEM WAS HERE...");
                } catch (NullPointerException ex)
                {
                    System.err.println("Segmentation Fault");
                    ex.printStackTrace();
                }
            } while(response.getPoints() > 0 || DatiRic.equals("Numero massimo di connessioni raggiunte. Riprova più tardi.\n")==true);
           
            try {
                response = (Message) inDalServer.readObject();  //attendo dati dal server
            } catch (IOException ex) {
                Logger.getLogger(Quiz.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Quiz.class.getName()).log(Level.SEVERE, null, ex);
            }
            TestoPunteggio.setText("Punteggio: "+response.getPoints());
            TestoTentativi.setText("Numero tentativi: "+(question.getAttempts()-1));
            InputRisposta.setText("Inserisci la risposta");
            
            if(response.getPoints() <= 0)
            {    
                Perso.setVisible(true);
                PunteggioMAX.setVisible(true);
                Invia.setEnabled(false);
                InputRisposta.setEnabled(false);
            }
            
            if(DatiRic.equals("Numero massimo di connessioni raggiunte. Riprova più tardi.\n")==true)
                JOptionPane.showMessageDialog(this, "Numero massimo di connessioni raggiunte. Riprova più tardi.", "Attenzione", JOptionPane.ERROR_MESSAGE);

            Riprova.setVisible(true);
            SfondoRiprova.setVisible(true);
            
            Invia.setVisible(false);
            SfondoInvia.setVisible(false);
            Domanda.setVisible(false);
            InputRisposta.setVisible(false);
            Separatore1.setVisible(false);
            
            if(response.getPoints() <= 0)
                JOptionPane.showMessageDialog(this, "Hai perso!", "Attenzione", JOptionPane.ERROR_MESSAGE); 
            
            /*
            jPanel2.setVisible(false);
            jPanel1.setVisible(true);
            */
            return;
        }
        
    }//GEN-LAST:event_InviaActionPerformed

    private void RiprovaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RiprovaActionPerformed
        // TODO add your handling code here:
        jPanel2.setVisible(false);
        jPanel1.setVisible(true);
        Riprova.setVisible(false);
        SfondoRiprova.setVisible(false);
        
        Invia.setVisible(true);
        SfondoInvia.setVisible(true);
        Domanda.setVisible(true);
        InputRisposta.setVisible(true);
        Separatore1.setVisible(true);
        Perso.setVisible(false);
        PunteggioMAX.setVisible(false);
    }//GEN-LAST:event_RiprovaActionPerformed

    private void GiocaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GiocaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_GiocaKeyPressed

    private void StartMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_StartMousePressed

    private void DragMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DragMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_DragMouseMoved

    private void DragMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DragMouseDragged
        // TODO add your handling code here:
        //this.setLocation(evt.getXOnScreen(), evt.getYOnScreen());
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_DragMouseDragged

    private void DragMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DragMousePressed
        // TODO add your handling code here:
        xMouse=evt.getX()+95;
        yMouse=evt.getY()+15;
    }//GEN-LAST:event_DragMousePressed

    private void Drag1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Drag1MouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_Drag1MouseDragged

    private void Drag1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Drag1MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_Drag1MouseMoved

    private void Drag1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Drag1MousePressed
        // TODO add your handling code here:
        xMouse=evt.getX()+95;
        yMouse=evt.getY()+15;
    }//GEN-LAST:event_Drag1MousePressed

    private void Drag1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Drag1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_Drag1MouseEntered
      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Quiz().setVisible(true);
            }
        });
    }
    
    private void setIconImage()
    {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("IconBar.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Chiudi;
    private javax.swing.JButton Chiudi1;
    private javax.swing.JLabel Domanda;
    private javax.swing.JLabel Drag;
    private javax.swing.JLabel Drag1;
    private javax.swing.JButton Gioca;
    private javax.swing.JLabel IP;
    private javax.swing.JTextField InputNickname;
    private javax.swing.JTextField InputRisposta;
    private javax.swing.JButton Invia;
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel Nickname;
    private javax.swing.JLabel Perso;
    private javax.swing.JLabel PunteggioMAX;
    private javax.swing.JLabel QuestionGame;
    private javax.swing.JButton Riprova;
    private javax.swing.JSeparator Separatore;
    private javax.swing.JSeparator Separatore1;
    private javax.swing.JLabel SfondoGioca;
    private javax.swing.JLabel SfondoInvia;
    private javax.swing.JLabel SfondoRiprova;
    private javax.swing.JLabel Start;
    private javax.swing.JLabel Start1;
    private javax.swing.JLabel TestoPunteggio;
    private javax.swing.JLabel TestoTentativi;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}